C51 COMPILER V9.52.0.0   SPI                                                               12/12/2017 17:05:20 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\SPI.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\libfnd\SPI.c BROWSE DEFINE(USE_HARDWARE_SPI,LCM_DRIVER_IST3932) DEBUG OB
                    -JECTEXTEND PRINT(.\SPI.lst) OBJECT(.\SPI.obj)

line level    source

   1          #include "SPI.h"
   2          
   3          
   4          #ifndef USE_HARDWARE_SPI
              // 软件SPI的管脚定义
              sbit SPI_MOSI   = P0^0;
              sbit SPI_MISO   = P0^1;
              sbit SPI_CLK    = P0^2;
              #endif
  10          // 每个SPI设备的/CS要在各自的.h中单独定义
  11          
  12          
  13          void SPI_Init(){
  14   1      #ifdef USE_HARDWARE_SPI
  15   1      #ifdef HARDWARE_SPI_AT_P4
                      AUXR1 |= 0x20;  // 将硬件SPI设置到P4口上
                      P4M0 &= 0xF1;
                      P4M1 &= 0xF1;   // 将SPI_CLK（P4.3）、SPI_MOSI（P4.1）和SPI_MISO（P4.2）设置成准双向
              #else
  20   1              AUXR1 &= 0xDF;  // 将硬件SPI设置到P1口上
  21   1              P1M0 &= 0x1F;
  22   1              P1M1 &= 0x1F;   // 将SPI_CLK（P1.7）、SPI_MOSI（P1.5）和SPI_MISO（P1.6）设置成准双向
  23   1      #endif
  24   1              SPDAT = 0;              // 初始化SPI缓冲区
  25   1              SPSTAT = 0xC0;  // 初始化SPI状态
  26   1              SPCTL = 0xDC;   // 开启硬件SPI，主机模式，高位先发，下降沿发送上升沿接收，CLK频率为1/4主频
  27   1      #else
                      P0M0 &= 0xF8;
                      P0M1 &= 0xF8;   // 将SPI_CLK、SPI_MOSI和SPI_MISO设置成准双向
              #endif
  31   1      }
  32          
  33          u8 SPI_SendAndReceive(u8 value){
  34   1      #ifdef USE_HARDWARE_SPI
  35   1              SPDAT = value;                          // 填充缓冲区
  36   1              while(!(SPSTAT & 0x80));        // 等待传输完成
  37   1              SPSTAT = 0xC0;                          // 清标志位
  38   1              return SPDAT;                           // 返回从机发送过来的数据
  39   1      #else
                      u8 i;
                      for(i=0;i<8;++i){
                              SPI_CLK = 0;
                              SPI_MOSI = value & 0x80;
                              SPI_CLK = 1;
                              value <<= 1;
                              value |= SPI_MISO;
                      }
                      return value;
              #endif
  50   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     32    ----
C51 COMPILER V9.52.0.0   SPI                                                               12/12/2017 17:05:20 PAGE 2   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
